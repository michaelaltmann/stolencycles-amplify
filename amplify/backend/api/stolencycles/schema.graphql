type Advertisement @model @auth(rules: [{ allow: public }]) {
  id: ID!
  platformName: AdvertisementPlatform
  platformId: String
    @index(
      name: "advertisementsByPlatformId"
      sortKeyFields: ["platformName"]
      queryField: "advertisementsByPlatformId"
    )
  title: String!
  url: String
  price: Float
  description: String
  model: String
  brand: String
    @index(
      name: "advertisementsByBrandColor"
      sortKeyFields: ["color"]
      queryField: "advertisementsByBrandColor"
    )
  color: String
  images: AWSJSON
  sellerId: String
    @index(
      name: "advertisementsBySellerId"
      queryField: "advertisementsBySellerId"
    )
  sellerName: String
  sellerImage: String
  status: AdvertisementStatus
    @index(
      name: "advertisementsByStatusPostDateId"
      sortKeyFields: ["postDate", "id"]
      queryField: "advertisementsByStatusPostDateId"
    )
  postDate: String
  sortOrder: String
  matches: [Match] @hasMany(indexName: "byAdvertisementIndex", fields: ["id"])
}

type Theft @model @auth(rules: [{ allow: public }]) {
  id: ID!
  platformName: TheftPlatform
  platformId: String
    @index(
      name: "theftsByPlatformId"
      sortKeyFields: ["platformName"]
      queryField: "theftsByPlatformId"
    )
  title: String!
  url: String
  description: String
  model: String
  brand: String
    @index(
      name: "theftsByBrandColor"
      sortKeyFields: ["color"]
      queryField: "theftsByBrandColor"
    )
  color: String
  images: AWSJSON
  status: TheftStatus
    @index(
      name: "theftsByStatusPostDateId"
      sortKeyFields: ["postDate", "id"]
      queryField: "theftsByStatusPostDateId"
    )
  location: String
  postDate: String
  sortOrder: String
  matches: [Match] @hasMany(indexName: "byTheftIndex", fields: ["id"])
}

type Seller @model @auth(rules: [{ allow: public }]) {
  id: String!
  notes: String
  aliasesAsFirstSeller: [SellerAlias]
    @hasMany(indexName: "byFirstSellerIndex", fields: ["id"])
  aliasesAsSecondSeller: [SellerAlias]
    @hasMany(indexName: "byFirstSellerIndex", fields: ["id"])
}

type SellerAlias @model @auth(rules: [{ allow: public }]) {
  id: ID!
  firstSellerId: String!
    @index(
      name: "byFirstSellerIndex"
      sortKeyFields: ["secondSellerId"]
      queryField: "byFirstSeller"
    )
  firstSeller: Seller @belongsTo(fields: ["firstSellerId"])
  secondSellerId: String!
    @index(
      name: "bySecondSellerIndex"
      sortKeyFields: ["firstSellerId"]
      queryField: "bySecondSeller"
    )
  secondSeller: Seller @belongsTo(fields: ["secondSellerId"])
}

type Match @model @auth(rules: [{ allow: public }]) {
  id: ID!
  advertisementId: ID!
    @index(name: "byAdvertisementIndex", sortKeyFields: ["theftId"])
  advertisement: Advertisement @belongsTo(fields: ["advertisementId"])
  theftId: ID! @index(name: "byTheftIndex", sortKeyFields: ["advertisementId"])
  theft: Theft @belongsTo(fields: ["theftId"])
  status: MatchStatus
    @index(
      name: "matchesByStatusAdvertisementId"
      sortKeyFields: ["advertisementId"]
      queryField: "matchesByStatusAdvertisementId"
    )
    @index(
      name: "matchesByStatusTheftId"
      sortKeyFields: ["theftId"]
      queryField: "matchesByStatusTheftId"
    )
}

enum AdvertisementPlatform {
  MARKETPLACE
  OFFERUP
  CRAIGSLIST
  PROSCLOSET
  NEXTDOOR
  EBAY
  OTHER
}
enum TheftPlatform {
  FACEBOOK
  BIKEINDEX
  PROJECT529
  NCIC
  OTHER
}

enum AdvertisementStatus {
  UNREVIEWED
  REVIEWED
  FLAGGED
  SOLD
  JUNK
}

enum TheftStatus {
  UNREVIEWED
  REVIEWED
  RECOVERED
}

enum MatchStatus {
  UNREVIEWED
  MATCHED
  MISMATCHED
}
