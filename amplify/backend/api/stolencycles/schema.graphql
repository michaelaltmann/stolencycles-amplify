type Advertisement @model @auth(rules: [{ allow: public }]) {
  id: String! @primaryKey
  title: String!
  url: String
  price: Float
  description: String
  model: String
  brand: String
  color: String
  images: AWSJSON
  seller: Seller @hasOne
  status: AdvertisementStatus
    @index(
      name: "advertisementsByStatusPostDateId"
      sortKeyFields: ["postDate", "id"]
      queryField: "advertisementsByStatusPostDateId"
    )
  postDate: String
  sortOrder: String
}

type Theft @model @auth(rules: [{ allow: public }]) {
  id: String! @primaryKey
  title: String!
  url: String
  description: String
  model: String
  brand: String
  color: String
  images: AWSJSON
  status: TheftStatus
  location: String
  postDate: String
  sortOrder: String
}

type Seller @model @auth(rules: [{ allow: public }]) {
  id: String! @primaryKey
  url: String
  name: String
  images: AWSJSON
  notes: String
  aliasesAsFirstSeller: [SellerAlias]
    @hasMany(indexName: "byFirstSellerIndex", fields: ["id"])
  aliasesAsSecondSeller: [SellerAlias]
    @hasMany(indexName: "byFirstSellerIndex", fields: ["id"])
}

type SellerAlias @model @auth(rules: [{ allow: public }]) {
  id: ID!
  firstSellerId: String!
    @index(name: "byFirstSellerIndex", sortKeyFields: ["secondSellerId"])
  firstSeller: Seller @belongsTo(fields: ["firstSellerId"])
  secondSellerId: String!
    @index(name: "bySecondSellerIndex", sortKeyFields: ["firstSellerId"])
  secondSeller: Seller @belongsTo(fields: ["secondSellerId"])
}

type Brand @model @auth(rules: [{ allow: public }]) {
  id: ID!
  name: String!
}

type Account @model @auth(rules: [{ allow: public }]) {
  id: String! @primaryKey
  images: AWSJSON
  name: String
  aliases: [Account] @hasMany
}

type Match @model @auth(rules: [{ allow: public }]) {
  id: ID!
  advertisement: Advertisement @hasOne
  theft: Theft @hasOne
  status: MatchStatus
}

enum AdvertisementPlatform {
  MARKETPLACE
  OFFERUP
  CRAIGSLIST
  PROSCLOSET
  NEXTDOOR
  EBAY
  OTHER
}
enum TheftPlatform {
  FACEBOOK
  BIKEINDEX
  PROJECT529
  NCIC
  OTHER
}

enum AdvertisementStatus {
  UNREVIEWED
  REVIEWED
  FLAGGED
  SOLD
  JUNK
}

enum TheftStatus {
  UNREVIEWED
  REVIEWED
  RECOVERED
}

enum MatchStatus {
  UNREVIEWED
  MATCHED
  MISMATCHED
}
